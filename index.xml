<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Datapio</title><link>https://datapio.github.io/</link><description>Recent content on Datapio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 13 Dec 2019 15:32:31 +0100</lastBuildDate><atom:link href="https://datapio.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Architecture</title><link>https://datapio.github.io/docs/microservices/architecture/</link><pubDate>Fri, 13 Dec 2019 15:32:31 +0100</pubDate><guid>https://datapio.github.io/docs/microservices/architecture/</guid><description/></item><item><title>Architecture</title><link>https://datapio.github.io/docs/opencore/architecture/</link><pubDate>Fri, 13 Dec 2019 15:32:31 +0100</pubDate><guid>https://datapio.github.io/docs/opencore/architecture/</guid><description/></item><item><title>Architecture</title><link>https://datapio.github.io/docs/pipelines/architecture/</link><pubDate>Fri, 13 Dec 2019 15:32:31 +0100</pubDate><guid>https://datapio.github.io/docs/pipelines/architecture/</guid><description/></item><item><title>Getting Started</title><link>https://datapio.github.io/docs/getting-started/</link><pubDate>Fri, 29 Nov 2019 20:32:00 +0100</pubDate><guid>https://datapio.github.io/docs/getting-started/</guid><description>Introduction Datapio is a framework used to automate 80% of the generic use cases you may encounter in the life cycle of your project, and configure the remaining 20%. It abstracts common actions in a fully automated process, such as:
continuous integration and deployment of your business code automated generation of the infrastructure used to run your business code multi-environment support based on your preferred Git flow To cover the most use cases, Datapio is divided in 3 features: OpenCore, MicroService and Pipelines.</description></item><item><title>Simple Application</title><link>https://datapio.github.io/docs/examples/simple-app/</link><pubDate>Wed, 04 Dec 2019 11:29:49 +0100</pubDate><guid>https://datapio.github.io/docs/examples/simple-app/</guid><description>datapio.yml --- environments: production: branch: master preproduction: branch: dev artifacts: - name: simple-app type: docker path: sources/simple-app params: dockerfile: docker/Dockerfile build-args: BASE_IMAGE: nginx:alpine - name: simple-app type: helm path: charts/simple-app requires: - name: simple-app type: docker params: set: some_const: &amp;quot;this is a constant&amp;quot; some_option: ${{ config.SOME_OPTION }} # injected from Consul some_secret: ${{ secrets.SOME_SECRET }} # injected from Vault</description></item><item><title>Custom Resource Definitions</title><link>https://datapio.github.io/docs/microservices/crd/</link><pubDate>Wed, 04 Dec 2019 11:18:11 +0100</pubDate><guid>https://datapio.github.io/docs/microservices/crd/</guid><description>MicroService Database Prisma API</description></item><item><title>Custom Resource Definitions</title><link>https://datapio.github.io/docs/opencore/crd/</link><pubDate>Wed, 04 Dec 2019 11:18:11 +0100</pubDate><guid>https://datapio.github.io/docs/opencore/crd/</guid><description>Project Release</description></item><item><title>Custom Resource Definitions</title><link>https://datapio.github.io/docs/pipelines/crd/</link><pubDate>Wed, 04 Dec 2019 11:18:11 +0100</pubDate><guid>https://datapio.github.io/docs/pipelines/crd/</guid><description>RabbitCluster RabbitExchange RabbitQueue Engine</description></item><item><title>Things are getting real</title><link>https://datapio.github.io/blog/things-are-getting-real/</link><pubDate>Fri, 29 Nov 2019 21:43:19 +0100</pubDate><guid>https://datapio.github.io/blog/things-are-getting-real/</guid><description>Hello there! After spending many months in our heads, Datapio finally came out into existence.
Though it is in very early stage, the team is assembling and development has started!
We sincerely hope to bring you a minimal viable product in the next few months.
In the mean time, watch closely what&#39;s happening on our Github and feel free to contribute.</description></item><item><title>Simple Micro-Service</title><link>https://datapio.github.io/docs/examples/simple-microservice/</link><pubDate>Wed, 04 Dec 2019 11:30:01 +0100</pubDate><guid>https://datapio.github.io/docs/examples/simple-microservice/</guid><description>Business code module.exports = { initialize: async () =&amp;gt; { const state = {} // ... return state }, terminate: async (state) =&amp;gt; { // ... }, resolvers: async (state) =&amp;gt; ({ Query: { books: async (parent, args, context, info) =&amp;gt; { return await context.prisma.books(info) } }, Mutation: { addBook: async (parent, { author, title }, context, info) =&amp;gt; { return await context.prisma.createBook({ author, title }, info) } } }), directives: async (state) =&amp;gt; ({ authenticated: async (next, source, args, context) =&amp;gt; { // .</description></item><item><title>System components</title><link>https://datapio.github.io/docs/microservices/system/</link><pubDate>Wed, 04 Dec 2019 11:18:15 +0100</pubDate><guid>https://datapio.github.io/docs/microservices/system/</guid><description>MicroService Controller Database Controller Prisma Controller API Controller</description></item><item><title>System components</title><link>https://datapio.github.io/docs/pipelines/system/</link><pubDate>Wed, 04 Dec 2019 11:18:15 +0100</pubDate><guid>https://datapio.github.io/docs/pipelines/system/</guid><description>RabbitMQ Controller Engine Controller</description></item><item><title>Base Components</title><link>https://datapio.github.io/docs/opencore/base/</link><pubDate>Tue, 03 Dec 2019 21:33:44 +0100</pubDate><guid>https://datapio.github.io/docs/opencore/base/</guid><description>Consul Vault Cert Manager TektonCD Nexus</description></item><item><title>Simple Engine</title><link>https://datapio.github.io/docs/examples/simple-engine/</link><pubDate>Wed, 04 Dec 2019 11:30:05 +0100</pubDate><guid>https://datapio.github.io/docs/examples/simple-engine/</guid><description>Business code module.exports = { initialize: async () =&amp;gt; { const state = {} // ... return state }, terminate: async (state) =&amp;gt; { // ... }, handle_message: async (state, message) =&amp;gt; { const result = {} // ... return result } } Kubernetes Resource --- apiVersion: datap.io/v1 kind: Engine metadata: name: simple-engine spec: package: simple-engine listen: - datapio.incomming emit: datapio.engines.simple</description></item><item><title>Framework components</title><link>https://datapio.github.io/docs/microservices/framework/</link><pubDate>Wed, 04 Dec 2019 11:18:15 +0100</pubDate><guid>https://datapio.github.io/docs/microservices/framework/</guid><description>Datamodel synchronizing task API builder task</description></item><item><title>Framework components</title><link>https://datapio.github.io/docs/pipelines/framework/</link><pubDate>Wed, 04 Dec 2019 11:18:15 +0100</pubDate><guid>https://datapio.github.io/docs/pipelines/framework/</guid><description>Engine builder task</description></item><item><title>System Components</title><link>https://datapio.github.io/docs/opencore/system/</link><pubDate>Tue, 03 Dec 2019 21:35:56 +0100</pubDate><guid>https://datapio.github.io/docs/opencore/system/</guid><description>User Admission Webhook Project Controller Project Admission Webhook Secret Injector Release Controller</description></item><item><title>Framework components</title><link>https://datapio.github.io/docs/opencore/framework/</link><pubDate>Tue, 03 Dec 2019 21:35:59 +0100</pubDate><guid>https://datapio.github.io/docs/opencore/framework/</guid><description>Project Github Webhook Artifact building tasks</description></item></channel></rss>